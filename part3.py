# class Bird():
#     def __init__(self, name):
#         self.name = name
#
#     def fly(self):
#         print(f"–ü—Ç–∏—Ü–∞ {self.name} –ª–µ—Ç–∞–µ—Ç")
#
# class Pinguin(Bird):
#     pass
#
# pinguin = Pinguin("–°–∞—Ä–∞")
# pinguin.fly()
# –ü–∏–Ω–≥–≤–∏–Ω—ã –Ω–µ –ª–µ—Ç–∞—é—Ç –∏ —ç—Ç–æ 3-–π –ø—Ä–∏–Ω—Ü–∏–ø SOLID üëÜ
# –ü—Ä–∏–Ω—Ü–∏–ø –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –ë–∞—Ä–±–∞—Ä—ã –õ–∏—Å–∫–æ–≤ (LSP, Liskov substitution Principle)
# –í–æ—Ç –∫–∞–∫ –¥–µ–ª–∞—é—Ç –ø–æ  —Ñ–∞–∫—Ç—Éüëá

class Bird():
    def fly(self):
        print(f"–≠—Ç–∞ –ø—Ç–∏—Ü–∞ –ª–µ—Ç–∞–µ—Ç")

class Duck(Bird):
    def fly(self):
        print("–≠—Ç–∞ —É—Ç–∫–∞ –ª–µ—Ç–∞–µ—Ç –±—ã—Å—Ç—Ä–æ")

def flyinsky(animal):
    animal.fly()

bird = Bird()
duck = Duck()

flyinsky(bird)
flyinsky(duck)